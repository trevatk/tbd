// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: dns/kademlia/v1/kademlia_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	IpOrDomain    string                 `protobuf:"bytes,2,opt,name=ip_or_domain,json=ipOrDomain,proto3" json:"ip_or_domain,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Node) GetIpOrDomain() string {
	if x != nil {
		return x.IpOrDomain
	}
	return ""
}

func (x *Node) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	RecordType    string                 `protobuf:"bytes,3,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Ttl           int64                  `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{1}
}

func (x *Record) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Record) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Record) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *Record) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Record) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{2}
}

func (x *PingRequest) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PingRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{3}
}

func (x *PingResponse) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PingResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type StoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Record        *Record                `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreRequest) Reset() {
	*x = StoreRequest{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRequest) ProtoMessage() {}

func (x *StoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRequest.ProtoReflect.Descriptor instead.
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{4}
}

func (x *StoreRequest) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *StoreRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *StoreRequest) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type StoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreResponse) Reset() {
	*x = StoreResponse{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreResponse) ProtoMessage() {}

func (x *StoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreResponse.ProtoReflect.Descriptor instead.
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{5}
}

func (x *StoreResponse) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *StoreResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *StoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FindNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	TargetNodeId  string                 `protobuf:"bytes,3,opt,name=target_node_id,json=targetNodeId,proto3" json:"target_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNodeRequest) Reset() {
	*x = FindNodeRequest{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNodeRequest) ProtoMessage() {}

func (x *FindNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNodeRequest.ProtoReflect.Descriptor instead.
func (*FindNodeRequest) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{6}
}

func (x *FindNodeRequest) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *FindNodeRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FindNodeRequest) GetTargetNodeId() string {
	if x != nil {
		return x.TargetNodeId
	}
	return ""
}

type FindNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ClosestNodes  []*Node                `protobuf:"bytes,3,rep,name=closest_nodes,json=closestNodes,proto3" json:"closest_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNodeResponse) Reset() {
	*x = FindNodeResponse{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNodeResponse) ProtoMessage() {}

func (x *FindNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNodeResponse.ProtoReflect.Descriptor instead.
func (*FindNodeResponse) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{7}
}

func (x *FindNodeResponse) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *FindNodeResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FindNodeResponse) GetClosestNodes() []*Node {
	if x != nil {
		return x.ClosestNodes
	}
	return nil
}

type FindValueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindValueRequest) Reset() {
	*x = FindValueRequest{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindValueRequest) ProtoMessage() {}

func (x *FindValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindValueRequest.ProtoReflect.Descriptor instead.
func (*FindValueRequest) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{8}
}

func (x *FindValueRequest) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *FindValueRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FindValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ClosestNodes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClosestNodes) Reset() {
	*x = ClosestNodes{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosestNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosestNodes) ProtoMessage() {}

func (x *ClosestNodes) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosestNodes.ProtoReflect.Descriptor instead.
func (*ClosestNodes) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{9}
}

func (x *ClosestNodes) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type FindValueResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Sender    *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	RequestId string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*FindValueResponse_Record
	//	*FindValueResponse_ClosestNodes
	Result        isFindValueResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindValueResponse) Reset() {
	*x = FindValueResponse{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindValueResponse) ProtoMessage() {}

func (x *FindValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindValueResponse.ProtoReflect.Descriptor instead.
func (*FindValueResponse) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{10}
}

func (x *FindValueResponse) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *FindValueResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FindValueResponse) GetResult() isFindValueResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *FindValueResponse) GetRecord() *Record {
	if x != nil {
		if x, ok := x.Result.(*FindValueResponse_Record); ok {
			return x.Record
		}
	}
	return nil
}

func (x *FindValueResponse) GetClosestNodes() *ClosestNodes {
	if x != nil {
		if x, ok := x.Result.(*FindValueResponse_ClosestNodes); ok {
			return x.ClosestNodes
		}
	}
	return nil
}

type isFindValueResponse_Result interface {
	isFindValueResponse_Result()
}

type FindValueResponse_Record struct {
	Record *Record `protobuf:"bytes,3,opt,name=record,proto3,oneof"`
}

type FindValueResponse_ClosestNodes struct {
	ClosestNodes *ClosestNodes `protobuf:"bytes,4,opt,name=closest_nodes,json=closestNodes,proto3,oneof"`
}

func (*FindValueResponse_Record) isFindValueResponse_Result() {}

func (*FindValueResponse_ClosestNodes) isFindValueResponse_Result() {}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IpOrDomain    string                 `protobuf:"bytes,1,opt,name=ip_or_domain,json=ipOrDomain,proto3" json:"ip_or_domain,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{11}
}

func (x *JoinRequest) GetIpOrDomain() string {
	if x != nil {
		return x.IpOrDomain
	}
	return ""
}

func (x *JoinRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *Node                  `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Node          *Node                  `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dns_kademlia_v1_kademlia_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP(), []int{12}
}

func (x *JoinResponse) GetSender() *Node {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *JoinResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

var File_dns_kademlia_v1_kademlia_service_proto protoreflect.FileDescriptor

const file_dns_kademlia_v1_kademlia_service_proto_rawDesc = "" +
	"\n" +
	"&dns/kademlia/v1/kademlia_service.proto\x12\x0fdns.kademlia.v1\"U\n" +
	"\x04Node\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12 \n" +
	"\fip_or_domain\x18\x02 \x01(\tR\n" +
	"ipOrDomain\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\"y\n" +
	"\x06Record\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1f\n" +
	"\vrecord_type\x18\x03 \x01(\tR\n" +
	"recordType\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x10\n" +
	"\x03ttl\x18\x05 \x01(\x03R\x03ttl\"[\n" +
	"\vPingRequest\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\"\\\n" +
	"\fPingResponse\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\"\x8d\x01\n" +
	"\fStoreRequest\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12/\n" +
	"\x06record\x18\x03 \x01(\v2\x17.dns.kademlia.v1.RecordR\x06record\"w\n" +
	"\rStoreResponse\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\"\x85\x01\n" +
	"\x0fFindNodeRequest\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12$\n" +
	"\x0etarget_node_id\x18\x03 \x01(\tR\ftargetNodeId\"\x9c\x01\n" +
	"\x10FindNodeResponse\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12:\n" +
	"\rclosest_nodes\x18\x03 \x03(\v2\x15.dns.kademlia.v1.NodeR\fclosestNodes\"r\n" +
	"\x10FindValueRequest\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\";\n" +
	"\fClosestNodes\x12+\n" +
	"\x05nodes\x18\x01 \x03(\v2\x15.dns.kademlia.v1.NodeR\x05nodes\"\xe4\x01\n" +
	"\x11FindValueResponse\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x121\n" +
	"\x06record\x18\x03 \x01(\v2\x17.dns.kademlia.v1.RecordH\x00R\x06record\x12D\n" +
	"\rclosest_nodes\x18\x04 \x01(\v2\x1d.dns.kademlia.v1.ClosestNodesH\x00R\fclosestNodesB\b\n" +
	"\x06result\"C\n" +
	"\vJoinRequest\x12 \n" +
	"\fip_or_domain\x18\x01 \x01(\tR\n" +
	"ipOrDomain\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\"h\n" +
	"\fJoinResponse\x12-\n" +
	"\x06sender\x18\x01 \x01(\v2\x15.dns.kademlia.v1.NodeR\x06sender\x12)\n" +
	"\x04node\x18\x02 \x01(\v2\x15.dns.kademlia.v1.NodeR\x04node2\x92\x03\n" +
	"\x0fKademliaService\x12E\n" +
	"\x04Ping\x12\x1c.dns.kademlia.v1.PingRequest\x1a\x1d.dns.kademlia.v1.PingResponse\"\x00\x12H\n" +
	"\x05Store\x12\x1d.dns.kademlia.v1.StoreRequest\x1a\x1e.dns.kademlia.v1.StoreResponse\"\x00\x12Q\n" +
	"\bFindNode\x12 .dns.kademlia.v1.FindNodeRequest\x1a!.dns.kademlia.v1.FindNodeResponse\"\x00\x12T\n" +
	"\tFindValue\x12!.dns.kademlia.v1.FindValueRequest\x1a\".dns.kademlia.v1.FindValueResponse\"\x00\x12E\n" +
	"\x04Join\x12\x1c.dns.kademlia.v1.JoinRequest\x1a\x1d.dns.kademlia.v1.JoinResponse\"\x00B5Z3github.com/structx/tbd/lib/protocol/dns/kademlia/v1b\x06proto3"

var (
	file_dns_kademlia_v1_kademlia_service_proto_rawDescOnce sync.Once
	file_dns_kademlia_v1_kademlia_service_proto_rawDescData []byte
)

func file_dns_kademlia_v1_kademlia_service_proto_rawDescGZIP() []byte {
	file_dns_kademlia_v1_kademlia_service_proto_rawDescOnce.Do(func() {
		file_dns_kademlia_v1_kademlia_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dns_kademlia_v1_kademlia_service_proto_rawDesc), len(file_dns_kademlia_v1_kademlia_service_proto_rawDesc)))
	})
	return file_dns_kademlia_v1_kademlia_service_proto_rawDescData
}

var file_dns_kademlia_v1_kademlia_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_dns_kademlia_v1_kademlia_service_proto_goTypes = []any{
	(*Node)(nil),              // 0: dns.kademlia.v1.Node
	(*Record)(nil),            // 1: dns.kademlia.v1.Record
	(*PingRequest)(nil),       // 2: dns.kademlia.v1.PingRequest
	(*PingResponse)(nil),      // 3: dns.kademlia.v1.PingResponse
	(*StoreRequest)(nil),      // 4: dns.kademlia.v1.StoreRequest
	(*StoreResponse)(nil),     // 5: dns.kademlia.v1.StoreResponse
	(*FindNodeRequest)(nil),   // 6: dns.kademlia.v1.FindNodeRequest
	(*FindNodeResponse)(nil),  // 7: dns.kademlia.v1.FindNodeResponse
	(*FindValueRequest)(nil),  // 8: dns.kademlia.v1.FindValueRequest
	(*ClosestNodes)(nil),      // 9: dns.kademlia.v1.ClosestNodes
	(*FindValueResponse)(nil), // 10: dns.kademlia.v1.FindValueResponse
	(*JoinRequest)(nil),       // 11: dns.kademlia.v1.JoinRequest
	(*JoinResponse)(nil),      // 12: dns.kademlia.v1.JoinResponse
}
var file_dns_kademlia_v1_kademlia_service_proto_depIdxs = []int32{
	0,  // 0: dns.kademlia.v1.PingRequest.sender:type_name -> dns.kademlia.v1.Node
	0,  // 1: dns.kademlia.v1.PingResponse.sender:type_name -> dns.kademlia.v1.Node
	0,  // 2: dns.kademlia.v1.StoreRequest.sender:type_name -> dns.kademlia.v1.Node
	1,  // 3: dns.kademlia.v1.StoreRequest.record:type_name -> dns.kademlia.v1.Record
	0,  // 4: dns.kademlia.v1.StoreResponse.sender:type_name -> dns.kademlia.v1.Node
	0,  // 5: dns.kademlia.v1.FindNodeRequest.sender:type_name -> dns.kademlia.v1.Node
	0,  // 6: dns.kademlia.v1.FindNodeResponse.sender:type_name -> dns.kademlia.v1.Node
	0,  // 7: dns.kademlia.v1.FindNodeResponse.closest_nodes:type_name -> dns.kademlia.v1.Node
	0,  // 8: dns.kademlia.v1.FindValueRequest.sender:type_name -> dns.kademlia.v1.Node
	0,  // 9: dns.kademlia.v1.ClosestNodes.nodes:type_name -> dns.kademlia.v1.Node
	0,  // 10: dns.kademlia.v1.FindValueResponse.sender:type_name -> dns.kademlia.v1.Node
	1,  // 11: dns.kademlia.v1.FindValueResponse.record:type_name -> dns.kademlia.v1.Record
	9,  // 12: dns.kademlia.v1.FindValueResponse.closest_nodes:type_name -> dns.kademlia.v1.ClosestNodes
	0,  // 13: dns.kademlia.v1.JoinResponse.sender:type_name -> dns.kademlia.v1.Node
	0,  // 14: dns.kademlia.v1.JoinResponse.node:type_name -> dns.kademlia.v1.Node
	2,  // 15: dns.kademlia.v1.KademliaService.Ping:input_type -> dns.kademlia.v1.PingRequest
	4,  // 16: dns.kademlia.v1.KademliaService.Store:input_type -> dns.kademlia.v1.StoreRequest
	6,  // 17: dns.kademlia.v1.KademliaService.FindNode:input_type -> dns.kademlia.v1.FindNodeRequest
	8,  // 18: dns.kademlia.v1.KademliaService.FindValue:input_type -> dns.kademlia.v1.FindValueRequest
	11, // 19: dns.kademlia.v1.KademliaService.Join:input_type -> dns.kademlia.v1.JoinRequest
	3,  // 20: dns.kademlia.v1.KademliaService.Ping:output_type -> dns.kademlia.v1.PingResponse
	5,  // 21: dns.kademlia.v1.KademliaService.Store:output_type -> dns.kademlia.v1.StoreResponse
	7,  // 22: dns.kademlia.v1.KademliaService.FindNode:output_type -> dns.kademlia.v1.FindNodeResponse
	10, // 23: dns.kademlia.v1.KademliaService.FindValue:output_type -> dns.kademlia.v1.FindValueResponse
	12, // 24: dns.kademlia.v1.KademliaService.Join:output_type -> dns.kademlia.v1.JoinResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_dns_kademlia_v1_kademlia_service_proto_init() }
func file_dns_kademlia_v1_kademlia_service_proto_init() {
	if File_dns_kademlia_v1_kademlia_service_proto != nil {
		return
	}
	file_dns_kademlia_v1_kademlia_service_proto_msgTypes[10].OneofWrappers = []any{
		(*FindValueResponse_Record)(nil),
		(*FindValueResponse_ClosestNodes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dns_kademlia_v1_kademlia_service_proto_rawDesc), len(file_dns_kademlia_v1_kademlia_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dns_kademlia_v1_kademlia_service_proto_goTypes,
		DependencyIndexes: file_dns_kademlia_v1_kademlia_service_proto_depIdxs,
		MessageInfos:      file_dns_kademlia_v1_kademlia_service_proto_msgTypes,
	}.Build()
	File_dns_kademlia_v1_kademlia_service_proto = out.File
	file_dns_kademlia_v1_kademlia_service_proto_goTypes = nil
	file_dns_kademlia_v1_kademlia_service_proto_depIdxs = nil
}
